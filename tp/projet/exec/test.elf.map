Archive member included to satisfy reference by file (symbol)

../lib/libtest.a(ecrireMouvements.o)
                              main.o (_Z22initialisationEcriturev)
../lib/libtest.a(moteur.o)    main.o (_ZN6MoteurC1Ev)
../lib/libtest.a(interruptions.o)
                              main.o (_Z17initInterruption0v)
../lib/libtest.a(led.o)       main.o (_ZN3LedC1EPVhii)
../lib/libtest.a(rs232.o)     ../lib/libtest.a(ecrireMouvements.o) (_Z18initialisationUartv)
../lib/libtest.a(memoire_24.o)
                              ../lib/libtest.a(ecrireMouvements.o) (_ZN13Memoire24CXXXD1Ev)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
                              ../lib/libtest.a(moteur.o) (__divmodhi4)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o (exit)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
                              main.o (__do_global_ctors)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
                              main.o (__do_global_dtors)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
                              /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o) (__tablejump2__)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
LOAD main.o
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/libm.a
LOAD ../lib/libtest.a
START GROUP
LOAD /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/libatmega324pa.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x9da
 *(.vectors)
 .vectors       0x0000000000000000       0x7c /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000007c                . = ALIGN (0x2)
                0x000000000000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000007c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000007c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x000000000000007c                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000007c                __ctors_start = .
 *(.ctors)
 .ctors         0x000000000000007c        0x2 main.o
 .ctors         0x000000000000007e        0x2 ../lib/libtest.a(ecrireMouvements.o)
                0x0000000000000080                __ctors_end = .
                0x0000000000000080                __dtors_start = .
 *(.dtors)
 .dtors         0x0000000000000080        0x2 main.o
 .dtors         0x0000000000000082        0x2 ../lib/libtest.a(ecrireMouvements.o)
                0x0000000000000084                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000084        0x0 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x0000000000000084                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000084        0xc /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000090       0x16 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000090                __do_copy_data
 .init4         0x00000000000000a6       0x10 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000a6                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 .init6         0x00000000000000b6       0x16 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
                0x00000000000000b6                __do_global_ctors
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000cc        0x8 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 *(.init9)
 *(.text)
 .text          0x00000000000000d4        0x4 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x00000000000000d4                __vector_22
                0x00000000000000d4                __vector_28
                0x00000000000000d4                __vector_24
                0x00000000000000d4                __vector_12
                0x00000000000000d4                __bad_interrupt
                0x00000000000000d4                __vector_6
                0x00000000000000d4                __vector_3
                0x00000000000000d4                __vector_23
                0x00000000000000d4                __vector_30
                0x00000000000000d4                __vector_25
                0x00000000000000d4                __vector_11
                0x00000000000000d4                __vector_13
                0x00000000000000d4                __vector_17
                0x00000000000000d4                __vector_19
                0x00000000000000d4                __vector_7
                0x00000000000000d4                __vector_27
                0x00000000000000d4                __vector_5
                0x00000000000000d4                __vector_4
                0x00000000000000d4                __vector_9
                0x00000000000000d4                __vector_2
                0x00000000000000d4                __vector_21
                0x00000000000000d4                __vector_15
                0x00000000000000d4                __vector_29
                0x00000000000000d4                __vector_8
                0x00000000000000d4                __vector_26
                0x00000000000000d4                __vector_14
                0x00000000000000d4                __vector_10
                0x00000000000000d4                __vector_16
                0x00000000000000d4                __vector_18
                0x00000000000000d4                __vector_20
 .text          0x00000000000000d8       0x1a main.o
                0x00000000000000d8                __vector_1
                0x00000000000000ec                _Z10initInterrv
 .text          0x00000000000000f2      0x106 ../lib/libtest.a(ecrireMouvements.o)
                0x00000000000000f2                _Z22initialisationEcriturev
                0x00000000000000fe                _Z15ecrireEnMemoirehh
                0x0000000000000166                _Z15refaireParcours6Moteurh
                0x00000000000001cc                _Z18getAdresseEcriturev
                0x00000000000001d2                _Z10getMemoirej
 .text          0x00000000000001f8       0xba ../lib/libtest.a(moteur.o)
                0x00000000000001f8                _ZN6Moteur23initialisationTimer0PwmEv
                0x000000000000020e                _ZN6MoteurC1Ev
                0x000000000000020e                _ZN6MoteurC2Ev
                0x0000000000000212                _ZN6MoteurD2Ev
                0x0000000000000212                _ZN6MoteurD1Ev
                0x0000000000000222                _ZN6Moteur19tournerGaucheMoteurEi
                0x000000000000023e                _ZN6Moteur19tournerDroiteMoteurEi
                0x000000000000025a                _ZN6Moteur13arreterMoteurEv
                0x0000000000000260                _ZN6Moteur19reglerVitesseMoteurEii
                0x0000000000000296                _ZN6Moteur13avancerMoteurEii
                0x00000000000002a4                _ZN6Moteur13reculerMoteurEii
 .text          0x00000000000002b2       0x36 ../lib/libtest.a(interruptions.o)
                0x00000000000002b2                _Z17initInterruption0v
                0x00000000000002c4                _Z17initInterruption1v
                0x00000000000002d6                _Z17initInterruption2v
 .text          0x00000000000002e8      0x1c6 ../lib/libtest.a(led.o)
                0x00000000000002e8                _ZN3LedC1EPVhii
                0x00000000000002e8                _ZN3LedC2EPVhii
                0x0000000000000396                _ZN3Led15allumerRougeLedEv
                0x00000000000003de                _ZN3Led14allumerVertLedEv
                0x0000000000000426                _ZN3Led15allumerAmbreLedEi
                0x000000000000047e                _ZN3Led11eteindreLedEv
 .text          0x00000000000004ae       0x6e ../lib/libtest.a(rs232.o)
                0x00000000000004ae                _Z18initialisationUartv
                0x00000000000004ca                _Z16transmissionUarth
                0x00000000000004e6                _Z22transmissionUartStringPch
                0x000000000000050e                _Z13receptionUartv
 .text          0x000000000000051c      0x35e ../lib/libtest.a(memoire_24.o)
                0x000000000000051c                _ZN13Memoire24CXXXD2Ev
                0x000000000000051c                _ZN13Memoire24CXXXD1Ev
                0x000000000000051e                _ZN13Memoire24CXXX4initEv
                0x0000000000000530                _ZN13Memoire24CXXXC2Ev
                0x0000000000000530                _ZN13Memoire24CXXXC1Ev
                0x000000000000053c                _ZN13Memoire24CXXX12choisir_bancEh
                0x0000000000000552                _ZN13Memoire24CXXX7lectureEjPh
                0x0000000000000614                _ZN13Memoire24CXXX7lectureEjPhh
                0x00000000000006de                _ZN13Memoire24CXXX8ecritureEjh
                0x000000000000076e                _ZN13Memoire24CXXX11ecrire_pageEjPhh
                0x0000000000000830                _ZN13Memoire24CXXX8ecritureEjPhh
 .text          0x000000000000087a        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .text          0x000000000000087a        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text          0x000000000000087a        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000087a        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x000000000000087a        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .text          0x000000000000087a        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .text          0x000000000000087a        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x000000000000087a        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
                0x000000000000087a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000087a       0xd2 main.o
                0x000000000000087a                main
 .text.exit     0x000000000000094c        0x8 main.o
 .text.startup  0x0000000000000954        0x8 ../lib/libtest.a(ecrireMouvements.o)
 .text.exit     0x000000000000095c        0x8 ../lib/libtest.a(ecrireMouvements.o)
 .text.libgcc.mul
                0x0000000000000964        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000964       0x28 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
                0x0000000000000964                __divmodhi4
                0x0000000000000964                _div
 .text.libgcc   0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .text.libgcc.div
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .text.libgcc   0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .text.libgcc.prologue
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .text.libgcc.builtins
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .text.libgcc.fmul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .text.libgcc.fixed
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .text.libgcc.mul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .text.libgcc.div
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .text.libgcc   0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .text.libgcc.prologue
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .text.libgcc.builtins
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .text.libgcc.fmul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .text.libgcc.fixed
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .text.libgcc.mul
                0x000000000000098c        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000000000000098c       0x28 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
                0x000000000000098c                __udivmodhi4
 .text.libgcc   0x00000000000009b4        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000009b4        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000009b4        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000009b4        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000009b4        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000000009b4        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x00000000000009b4        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc   0x00000000000009b4        0xc /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
                0x00000000000009b4                __tablejump2__
 .text.libgcc.prologue
                0x00000000000009c0        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x00000000000009c0        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x00000000000009c0        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x00000000000009c0        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
                0x00000000000009c0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000009c0        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
                0x00000000000009c0                exit
                0x00000000000009c0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 .fini6         0x00000000000009c0       0x16 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
                0x00000000000009c0                __do_global_dtors
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000009d6        0x4 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000000000009da                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000000000009da                _etext = .

.data           0x0000000000800100        0x2 load address 0x00000000000009da
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 .data          0x0000000000800100        0x1 main.o
                0x0000000000800100                ecrireMouv
 .data          0x0000000000800101        0x0 ../lib/libtest.a(ecrireMouvements.o)
 .data          0x0000000000800101        0x0 ../lib/libtest.a(moteur.o)
 .data          0x0000000000800101        0x0 ../lib/libtest.a(interruptions.o)
 .data          0x0000000000800101        0x0 ../lib/libtest.a(led.o)
 .data          0x0000000000800101        0x0 ../lib/libtest.a(rs232.o)
 .data          0x0000000000800101        0x1 ../lib/libtest.a(memoire_24.o)
                0x0000000000800101                _ZN13Memoire24CXXX22m_adresse_peripheriqueE
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end = .)

.bss            0x0000000000800102        0xb
                0x0000000000800102                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 .bss           0x0000000000800102        0x8 main.o
                0x0000000000800102                led
                0x0000000000800108                basculeTimer
                0x0000000000800109                moteurs
 .bss           0x000000000080010a        0x3 ../lib/libtest.a(ecrireMouvements.o)
                0x000000000080010a                notreMemoire
 .bss           0x000000000080010d        0x0 ../lib/libtest.a(moteur.o)
 .bss           0x000000000080010d        0x0 ../lib/libtest.a(interruptions.o)
 .bss           0x000000000080010d        0x0 ../lib/libtest.a(led.o)
 .bss           0x000000000080010d        0x0 ../lib/libtest.a(rs232.o)
 .bss           0x000000000080010d        0x0 ../lib/libtest.a(memoire_24.o)
 .bss           0x000000000080010d        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080010d        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080010d        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080010d        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080010d        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
 .bss           0x000000000080010d        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
 .bss           0x000000000080010d        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080010d        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
 *(.bss*)
 *(COMMON)
                0x000000000080010d                PROVIDE (__bss_end = .)
                0x00000000000009da                __data_load_start = LOADADDR (.data)
                0x00000000000009dc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080010d        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x000000000080010d                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x2640
 *(.stab)
 .stab          0x0000000000000000      0x360 main.o
 .stab          0x0000000000000360      0x348 ../lib/libtest.a(ecrireMouvements.o)
                                        0x354 (size before relaxing)
 .stab          0x00000000000006a8      0x42c ../lib/libtest.a(moteur.o)
                                        0x438 (size before relaxing)
 .stab          0x0000000000000ad4      0x174 ../lib/libtest.a(interruptions.o)
                                        0x180 (size before relaxing)
 .stab          0x0000000000000c48      0x4d4 ../lib/libtest.a(led.o)
                                        0x4e0 (size before relaxing)
 .stab          0x000000000000111c      0x21c ../lib/libtest.a(rs232.o)
                                        0x228 (size before relaxing)
 .stab          0x0000000000001338      0xc30 ../lib/libtest.a(memoire_24.o)
                                        0xc3c (size before relaxing)
 .stab          0x0000000000001f68      0x138 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_divmodhi4.o)
                                        0x144 (size before relaxing)
 .stab          0x00000000000020a0       0x6c /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x000000000000210c       0xd8 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x00000000000021e4       0xb4 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)
 .stab          0x0000000000002298       0xd8 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_ctors.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000002370       0xd8 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_dtors.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000002448      0x15c /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_udivmodhi4.o)
                                        0x168 (size before relaxing)
 .stab          0x00000000000025a4       0x9c /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_tablejump2.o)
                                         0xa8 (size before relaxing)

.stabstr        0x0000000000000000     0x2276
 *(.stabstr)
 .stabstr       0x0000000000000000     0x2276 main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x23
 *(.comment)
 .comment       0x0000000000000000       0x23 main.o
                                         0x24 (size before relaxing)
 .comment       0x0000000000000023       0x24 ../lib/libtest.a(ecrireMouvements.o)
 .comment       0x0000000000000023       0x24 ../lib/libtest.a(moteur.o)
 .comment       0x0000000000000023       0x24 ../lib/libtest.a(interruptions.o)
 .comment       0x0000000000000023       0x24 ../lib/libtest.a(led.o)
 .comment       0x0000000000000023       0x24 ../lib/libtest.a(rs232.o)
 .comment       0x0000000000000023       0x24 ../lib/libtest.a(memoire_24.o)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x6cc
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x6cc /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_abbrev   0x0000000000000000      0x66e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x66e /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x255
 *(.debug_str)
 .debug_str     0x0000000000000000      0x255 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(test.elf elf32-avr)
LOAD linker stubs
